@use '../../styles/grid-mixins';

:host {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 24px;

  @include grid-mixins.board-tile-grid-variables;
}

.shape-selection {
  display: flex;
  flex-direction: column;
  gap: 16px;
  min-width: calc(3.5 * var(--square-size) + 3 * var(--gap));

  &.nothing-selected {
    .variant-info {
      animation: scale-pulse 1.5s infinite;
    }
  }
}

.shape-box {
  @include grid-mixins.board-tile-grid;

  --max-count: max(var(--columns), var(--rows));
  --gap-count: calc(var(--max-count) - 1);

  min-width: calc(var(--max-count) * var(--square-size) + var(--gap-count) * var(--gap));
  min-height: calc(var(--max-count) * var(--square-size) + var(--gap-count) * var(--gap));

  cursor: pointer;

  padding: 8px;
  border: 2px dotted #889;
  border-radius: 4px;
  opacity: 0.85;
  width: fit-content;

  position: relative;

  &:hover {
    opacity: 0.95;
    border-color: currentColor;
  }

  &.selected {
    opacity: 1;
    border-style: solid;
    border-color: currentColor;
  }

  app-board-tile {
    margin: -1px;
  }

  .variant-info {
    position: absolute;
    top: -0.4em;
    left: -0.4em;
    background: #889;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    display: grid;
    place-items: center;
    padding: 0.2em;
    font-size: 0.8em;
    line-height: 1;
    font-weight: bold;
  }
}

.control-box {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(5, auto);
  gap: 16px;
  height: fit-content;

  button:not(.icon-btn),
  .warning {
    grid-column: 1 / -1;
  }

  button.submit-btn {
    margin-top: 16px;

    &:not([disabled]) {
      background: darkgreen;
      color: #fafafa;
    }
  }

  .warning {
    font-size: 0.8em;
    font-style: italic;

    i {
      margin-right: 8px;
      color: orange;
    }
  }
}

@keyframes scale-pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.075);
  }

  100% {
    transform: scale(1);
  }
}
